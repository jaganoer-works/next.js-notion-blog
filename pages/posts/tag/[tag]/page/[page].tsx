import Head from "next/head";
import {
  getAllTags,
  getNumberOfPagesByTag,
  getPostByTagAndPage,
} from "../../../../../lib/notion-api";
import SinglePost from "../../../../../components/post/single-post";
import Pagination from "../../../../../components/pagination/Pagination";
import Tag from "../../../../../components/tag/tag";

export const getStaticPaths = async () => {
  const allTags = await getAllTags();

  let params = [];

  await Promise.all(
    allTags.map((tag) => {
      return getNumberOfPagesByTag(tag).then((numberOfPageByTag) => {
        for (let i = 1; i <= numberOfPageByTag; i++) {
          params.push({ params: { tag: tag, page: i.toString() } });
        }
      });
    })
  );

  return {
    paths: params,
    fallback: "blocking",
  };
};

export const getStaticProps = async (context) => {
  const currentPage: string = context.params?.page.toString();
  const currentTag: string = context.params?.tag.toString();

  const upperCaseCurrentTag =
    currentTag.charAt(0).toUpperCase() + currentTag.slice(1);

  const posts = await getPostByTagAndPage(
    upperCaseCurrentTag,
    parseInt(currentPage)
  );

  const numberOfPageByTag = await getNumberOfPagesByTag(upperCaseCurrentTag);

  const allTags = await getAllTags();

  return {
    props: {
      posts,
      numberOfPageByTag,
      currentTag,
      allTags,
    },
    revalidate: parseInt(process.env.REVALIDATE_TIME, 10),
  };
};

export default function BlogTagPageList({
  numberOfPageByTag,
  posts,
  currentTag,
  allTags,
}) {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion-blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16 mx-auto">
        <h1 className="text-5xl font-medium text-center mb-16">Notion Blog</h1>
        <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
          {posts.map((post) => (
            <div key={post.id}>
              <SinglePost
                title={post.title}
                description={post.description}
                date={post.date}
                tags={post.tags}
                slug={post.slug}
                isPagination={true}
              />
            </div>
          ))}
        </section>
        <Pagination numberOfPage={numberOfPageByTag} tag={currentTag} />
        <Tag tags={allTags} />
      </main>
    </div>
  );
}
